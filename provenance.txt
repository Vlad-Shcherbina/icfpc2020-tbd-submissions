### Binary
cargo build -p tbd --bin bee_player --release


### Base commit
49ba837
WIP
Vlad Shcherbina
Mon Jul 20 10:06:05 2020 +0300


### Local changes on top of this base commit

diff --git a/src/bin/bee_player.rs b/src/bin/bee_player.rs
index 1d03a85..7cdf644 100644
--- a/src/bin/bee_player.rs
+++ b/src/bin/bee_player.rs
@@ -42,6 +42,7 @@ fn predict(mut pos: Vec2, mut vel: Vec2, mut control: i128) -> Vec<Vec2> {
 
 fn def_score(trajectory: &[Vec2], field: &Field) -> i128 {
     let mut min = 1000000;
+    let mut max = -1000000;
     for (i, &p) in trajectory.iter().enumerate() {
         if i < 50 {
             let err = field.planet_radius + 3 - p.norm();
@@ -57,6 +58,7 @@ fn def_score(trajectory: &[Vec2], field: &Field) -> i128 {
             return -500;
         }
         min = min.min(p.norm());
+        max = max.max(p.norm());
     }
     return min
 }
@@ -120,7 +122,7 @@ impl Ai for Bee {
             };
             let control = (-30..=30).max_by_key(|&control| {
                 score(&predict(pos, vel, control), field)
-                - control.abs()  // penalty for wasting fuel
+                - 2 * control.abs()  // penalty for wasting fuel
             }).unwrap();
 
             let a = ccw(pos);
