### Binary
cargo build -p tbd --bin example_player --release


### Base commit
6528d6f
add reverse-engineered type info to uforest
Ilona
Sun Jul 19 11:32:54 2020 +0200


### Local changes on top of this base commit

diff --git a/src/bin/example_player.rs b/src/bin/example_player.rs
index 5566cde..88ad1b5 100644
--- a/src/bin/example_player.rs
+++ b/src/bin/example_player.rs
@@ -6,38 +6,18 @@ use tbd::uforest::*;
 fn main() {
     let client = Client::from_submission_argv();
 
-    loop {
-        eprintln!("*** new game ***");
-
-        let gr = client.join(JoinRequest { mystery: Data::Nil });
-        dbg!(&gr);
-        // assert_eq!(success, 1);
-        if gr.stage == Stage::Finished {
-            eprintln!("the game ended prematurely");
-            continue;
-        }
-        assert_eq!(gr.stage, Stage::NotStarted);
+    let gr = client.join(JoinRequest { mystery: Data::Nil });
+    dbg!(&gr);
 
-        let gr = client.start(ShipParams {
-            fuel: 1,
-            number2: 1,
-            number3: 1,
-            number4: 1,
-        });
-        dbg!(&gr);
-        assert_eq!(gr.stage, Stage::Started);
-
-        loop {
-            let gr = client.commands(Commands(vec![]));
-            dbg!(&gr);
-            match gr.stage {
-                Stage::NotStarted => panic!(),
-                Stage::Started => {},
-                Stage::Finished => break,
-            }
-        }
+    let gr = client.start(ShipParams {
+        fuel: 1,
+        number2: 1,
+        number3: 1,
+        number4: 1,
+    });
+    dbg!(&gr);
 
-        // try to send another request just to see what happens
+    loop {
         let gr = client.commands(Commands(vec![]));
         dbg!(&gr);
     }
