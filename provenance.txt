### Binary
cargo build -p tbd --bin example_player --release


### Base commit
ad6e85e
Send network history
Vlad Shcherbina
Sun Jul 19 04:13:40 2020 +0300


### Local changes on top of this base commit

diff --git a/src/bin/example_player.rs b/src/bin/example_player.rs
index da27f03..eacc8e2 100644
--- a/src/bin/example_player.rs
+++ b/src/bin/example_player.rs
@@ -6,32 +6,39 @@ use tbd::uforest::*;
 fn main() {
     let client = Client::from_submission_argv();
 
-    let gr = client.join(JoinRequest { mystery: Data::Nil });
-    dbg!(&gr);
-    assert_eq!(gr.stage, Stage::NotStarted);
-
-    let gr = client.start(InitialShipParams {
-        number1: 0,
-        number2: 0,
-        number3: 0,
-        number4: 0,
-    });
-    dbg!(&gr);
-    assert_eq!(gr.stage, Stage::Started);
-
     loop {
-        let gr = client.commands(Commands { mystery: Data::Nil });
+        eprintln!("*** new game ***");
+
+        let gr = client.join(JoinRequest { mystery: Data::Nil });
         dbg!(&gr);
-        match gr.stage {
-            Stage::NotStarted => panic!(),
-            Stage::Started => {},
-            Stage::Finished => break,
+        // assert_eq!(success, 1);
+        if gr.stage == Stage::Finished {
+            eprintln!("the game ended prematurely");
+            continue;
         }
-    }
+        assert_eq!(gr.stage, Stage::NotStarted);
 
-    // try to send another request just to see what happens
-    let gr = client.commands(Commands { mystery: Data::Nil });
-    dbg!(&gr);
+        let gr = client.start(InitialShipParams {
+            number1: 0,
+            number2: 0,
+            number3: 0,
+            number4: 0,
+        });
+        dbg!(&gr);
+        assert_eq!(gr.stage, Stage::Started);
 
-    eprintln!("bye");
+        loop {
+            let gr = client.commands(Commands { mystery: Data::Nil });
+            dbg!(&gr);
+            match gr.stage {
+                Stage::NotStarted => panic!(),
+                Stage::Started => {},
+                Stage::Finished => break,
+            }
+        }
+
+        // try to send another request just to see what happens
+        let gr = client.commands(Commands { mystery: Data::Nil });
+        dbg!(&gr);
+    }
 }
diff --git a/src/uforest.rs b/src/uforest.rs
index 92fbc10..fa16870 100644
--- a/src/uforest.rs
+++ b/src/uforest.rs
@@ -83,7 +83,6 @@ impl From<Data> for GameResponse {
         let parts = data.into_vec();
         assert_eq!(parts.len(), 4);
         let success = parts[0].try_as_number().unwrap();
-        assert_eq!(success, 1);
         let stage = parts[1].clone().into();
         let unknown_list_a = parts[2].clone();
         let state = parts[3].clone();
